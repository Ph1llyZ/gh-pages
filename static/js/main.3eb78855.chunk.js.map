{"version":3,"sources":["components/LineGraph.jsx","components/Temperature.jsx","components/Altitude.jsx","components/CO2.jsx","components/Humidity.jsx","components/Pressure.jsx","components/TVOC.jsx","components/Beacon.jsx","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","graphContainer","display","flexDirection","margin","graphTitle","marginLeft","marginRight","LineGraph","props","data","dataKey","classes","Fragment","className","tableContainer","width","height","type","stroke","tableStyle","flex","Temperature","Container","Grid","container","spacing","item","md","Altitude","maxHeight","overflowY","CO2","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","map","time","Humidity","Pressure","TVOC","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","top","left","root","flexGrow","TabPanel","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","a11yProps","Beacon","useState","open","setOpen","setValue","altData","setAltData","CO2Data","setCO2Data","humData","setHumData","presData","setPresData","TVOCData","setTVOCData","tempData","setTempData","useEffect","timeOffset","Time","newAltData","e","altitude","newCO2Data","newHumData","humidity","newPresData","pressure","newTVOCData","newTempData","temperature","rot","style","transform","fontSize","color","onClick","Modal","aria-describedby","onClose","AppBar","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","scrollButtons","Tab","label","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","Boolean","window","location","hostname","match","ReactDOM","render","setData","ref","on","snapshot","val","bootstrapURLKeys","key","defaultCenter","lat","lng","options","scrollwheel","heatmapLibrary","heatmap","positions","weight","radius","opacity","zoom","Object","values","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3eb78855.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Label, ResponsiveContainer, Tooltip } from 'recharts';\nimport { Paper, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n  graphContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 20\n  },\n  graphTitle: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n}));\n\nexport default function LineGraph(props) {\n\n  const { data, dataKey } = props;\n\n  const classes = useStyles();\n\n\n  return (\n    <React.Fragment>\n      <div className={classes.tableContainer}>\n        {/* <h3 className={classes.tableTitle}>Chart Title</h3> */}\n        <LineChart width={600} height={300} data={data}>\n          <Line type=\"monotone\" dataKey={dataKey} stroke=\"#8884d8\" />\n          <CartesianGrid stroke=\"#ccc\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n        </LineChart>\n      </div>\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react';\nimport LineGraph from './LineGraph';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  tableContainer: {\n    display: 'flex'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n\n}));\n\nexport default function Temperature(props) {\n\n  const { data } = props;\n\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <h3>Temperature Graph</h3>\n      <Container>\n        <Grid container spacing={1}>\n          <Grid item md={7}>\n            <LineGraph className={classes.tableStyle} data={data} dataKey=\"temperature\" />\n          </Grid>\n          <Grid item md={5}>\n            weewoo\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n    \n  )\n}","import React, { useState } from 'react';\nimport LineGraph from './LineGraph';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  tableContainer: {\n    display: 'flex'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n\n}));\n\nexport default function Altitude(props) {\n\n  const { data } = props;\n\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <h3>Altitude Graph</h3>\n      <Container>\n        <Grid container spacing={1}>\n          <Grid item md={7}>\n            <LineGraph className={classes.tableStyle} data={data} dataKey=\"altitude\"/>\n          </Grid>\n          <Grid item md={5}>\n            weewoo\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n    \n  )\n}","import React, { useState } from 'react';\nimport LineGraph from './LineGraph';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n  Container,\n  Grid,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n } from '@material-ui/core';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Label, ResponsiveContainer, Tooltip } from 'recharts';\n\nconst useStyles = makeStyles(theme => ({\n  tableContainer: {\n    maxHeight: 450,\n    overflowY: 'auto'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n  graphContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 20\n  },\n  graphTitle: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n\n}));\n\nexport default function CO2(props) {\n\n  const { data } = props;\n\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <h3>CO2 Graph</h3>\n      <Container>\n        <Grid container spacing={1}>\n          <Grid item md={7}>\n            <div className={classes.graphContainer}>\n              {/* <h3 className={classes.tableTitle}>Chart Title</h3> */}\n              <LineChart width={600} height={300} data={data}>\n                <Line type=\"monotone\" dataKey=\"CO2\" stroke=\"#8884d8\" />\n                <CartesianGrid stroke=\"#ccc\" />\n                <XAxis dataKey=\"time\" />\n                <YAxis/>\n                <Tooltip />\n              </LineChart>\n            </div>\n          </Grid>\n          <Grid item md={5}>\n            <TableContainer className={classes.tableContainer}>\n              <Table stickyHeader>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      Time\n                    </TableCell>\n                    <TableCell>\n                      CO2 (Parts per million)\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map(data => (\n                    <TableRow>\n                      <TableCell>\n                        {data.time}\n                      </TableCell>\n                      <TableCell>\n                        {data.CO2}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n    \n  )\n}","import React, { useState } from 'react';\nimport LineGraph from './LineGraph';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  tableContainer: {\n    display: 'flex'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n\n}));\n\nexport default function Humidity(props) {\n\n  const { data } = props;\n\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <h3>Humidity Graph</h3>\n      <Container>\n        <Grid container spacing={1}>\n          <Grid item md={7}>\n            <LineGraph className={classes.tableStyle} data={data} dataKey=\"humidity\"/>\n          </Grid>\n          <Grid item md={5}>\n            weewoo\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n    \n  )\n}","import React, { useState } from 'react';\nimport LineGraph from './LineGraph';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  tableContainer: {\n    display: 'flex'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n\n}));\n\nexport default function Pressure(props) {\n\n  const { data } = props;\n\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <h3>Pressure Graph</h3>\n      <Container>\n        <Grid container spacing={1}>\n          <Grid item md={7}>\n            <LineGraph className={classes.tableStyle} data={data} dataKey=\"pressure\" />\n          </Grid>\n          <Grid item md={5}>\n            weewoo\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n    \n  )\n}","import React, { useState } from 'react';\nimport LineGraph from './LineGraph';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  tableContainer: {\n    display: 'flex'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n\n}));\n\nexport default function TVOC(props) {\n\n  const { data } = props;\n\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <h3>TVOC Graph</h3>\n      <Container>\n        <Grid container spacing={1}>\n          <Grid item md={7}>\n            <LineGraph className={classes.tableStyle} data={data} dataKey=\"TVOC\"/>\n          </Grid>\n          <Grid item md={5}>\n            weewoo\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n    \n  )\n}","import React, { useState, useEffect } from 'react';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { \n  Modal,\n  AppBar,\n  Tabs,\n  Tab,\n  Typography,\n  Box, \n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LineGraph from './LineGraph';\nimport Temperature from './Temperature';\nimport Altitude from './Altitude';\nimport CO2 from './CO2';\nimport Humidity from './Humidity';\nimport Pressure from './Pressure';\nimport TVOC from './TVOC';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    width: '85%',\n    height: '85%',\n    top: '5%',\n    left: '5%',\n    overflowY: 'auto',\n  },\n  tableContainer: {\n    display: 'flex'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\n\nexport default function Beacon(props) {\n  const { data } = props;\n\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(0);\n \n  const [altData, setAltData] = useState([]);\n  const [CO2Data, setCO2Data] = useState([]);\n  const [humData, setHumData] = useState([]);\n  const [presData, setPresData] = useState([]);\n  const [TVOCData, setTVOCData] = useState([]);\n  const [tempData, setTempData] = useState([]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  }\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  useEffect(() => {\n    if (data[0]) {\n      const timeOffset = data[0].Time;\n       // setting new altitude data\n      const newAltData = data.map(e => {\n        return {altitude: e.Altitude, time: e.Time - timeOffset}\n      })\n      setAltData(newAltData);\n      // setting new CO2 data\n      const newCO2Data = data.map(e => {\n        return {CO2: e.CO2, time: e.Time - timeOffset}\n      })\n      setCO2Data(newCO2Data);\n      // setting new humidity data\n      const newHumData = data.map(e => {\n        return {humidity: e.Humidity, time: e.Time - timeOffset}\n      })\n      setHumData(newHumData);\n      // setting new pressure data\n      const newPresData = data.map(e => {\n        return {pressure: e.Pressure, time: e.Time - timeOffset}\n      })\n      setPresData(newPresData);\n      // setting new TVOC data\n      const newTVOCData = data.map(e => {\n        return {TVOC: e.TVOC, time: e.Time - timeOffset}\n      })\n      setTVOCData(newTVOCData);\n      // setting new temperature data\n      const newTempData = data.map(e => {\n        return {temperature: e.Temperature, time: e.Time - timeOffset}\n      })\n      setTempData(newTempData);\n    }\n   \n  }, [data])\n\n\n  const [rot, setRot] = useState(0);\n\n  const incRot = () => {\n    setRot(rot + 45);\n  }\n\n\n  return(\n    <div>\n      <ArrowUpwardIcon \n        style={{transform: `rotate(${rot}deg)`}}\n      />\n      <PlaceIcon \n        style={{fontSize: 50}} \n        color=\"secondary\"\n        onClick={handleOpen}\n      />\n     <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <div className={classes.paper}>\n          <h2>Beacon 123</h2>\n          <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                <Tab label=\"Altitude\" {...a11yProps(0)} />\n                <Tab label=\"CO2\" {...a11yProps(1)} />\n                <Tab label=\"Humidity\" {...a11yProps(2)} />\n                <Tab label=\"Pressure\" {...a11yProps(3)} />\n                <Tab label=\"TVOC\" {...a11yProps(4)} />\n                <Tab label=\"Temperature\" {...a11yProps(5)} />\n              </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n              <Altitude data={altData} />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n              <CO2 data={CO2Data} />\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n              <Humidity data={humData} />\n            </TabPanel>\n            <TabPanel value={value} index={3}>\n              <Pressure data={presData} />\n            </TabPanel>\n            <TabPanel value={value} index={4}>\n              <TVOC data={TVOCData} />\n            </TabPanel>\n            <TabPanel value={value} index={5}>\n              <Temperature data={tempData}/>\n            </TabPanel>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport Beacon from './components/Beacon';\nimport firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCxkOPS5DqnXak4ecDbuPrNKJ-fK4Xc868\",\n  authDomain: \"hacktech2020-88888.firebaseapp.com\",\n  databaseURL: \"https://hacktech2020-88888.firebaseio.com\",\n  projectId: \"hacktech2020-88888\",\n  storageBucket: \"hacktech2020-88888.appspot.com\",\n  messagingSenderId: \"562008011322\",\n  appId: \"1:562008011322:web:ff933e53757c12fd84fb03\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport var database = firebase.database();\n\nexport default function App() {\n  const [data, setData] = useState(0);\n  const heatMapData = {    \n    positions: [\n      {lat: 59.95, lng: 30.33, weight: 2},\n      {lat: 60, lng: 30.5, weight: 1}\n    ],\n    options: {   \n      radius: 300,   \n      opacity: 0.6,\n    }\n  }\n\n  useEffect(() => {\n    const dataRef = firebase.database().ref('Data');\n    dataRef.on('value', (snapshot) => {\n      let value = snapshot.val();\n      setData(value);\n      \n    })\n  }, []);\n\n  return (\n    <div style={{ position: 'absolute', top: '10%', left: '5%', height: '80%', width: '90%' }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: 'AIzaSyBWSzeSPr_5zD53xEs0CU0UTOVYsOb6FvA'}}\n        defaultCenter={{\n          lat: 59.95,\n          lng: 30.33\n        }}\n        options={{ scrollwheel: false }}\n        heatmapLibrary={true}          \n        heatmap={heatMapData}   \n        zoom={11}\n      >\n        <Beacon \n          lat={59.95}\n          lng={30.33}\n          data={Object.values(data)}\n        />\n      </GoogleMapReact>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}